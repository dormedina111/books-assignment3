name: assignment3

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          start_time=$(date -Iminutes)
          echo "Start Time: $start_time" > log.txt
          echo "Dor Medina" >> log.txt
          docker build -t books-service ./books && echo "image successfully built" >> log.txt || echo "image not able to be built" >> log.txt

      - name: Save built image
        run: docker save -o books-service.tar books-service

      - name: Upload built image
        uses: actions/upload-artifact@v4
        with:
          name: books-service
          path: books-service.tar

      - name: Upload log
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: log.txt

  test:
    needs: build
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built image
        uses: actions/download-artifact@v4
        with:
          name: books-service
          path: books-service.tar

      - name: Load Docker image
        run: docker load -i books-service.tar

      - name: Download build log
        uses: actions/download-artifact@v4
        with:
          name: log
          path: log.txt

      - name: Start services
        run: |
          cat log.txt > log.txt
          docker-compose up -d && echo "Container up and running" >> log.txt || echo "Container failed to run" >> log.txt

      - name: Run tests
        run: |
          docker-compose exec books-service pytest -v /app/tests/assn3_tests.py | tee assn3_test_results.txt && echo "tests succeeded" >> log.txt || echo "tests failed" >> log.txt

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: assn3_test_results.txt

      - name: Upload log
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: log.txt
          overwrite: true

  query:
    needs: test
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo
        ports:
          - 27017:27017
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built image
        uses: actions/download-artifact@v4
        with:
          name: books-service
          path: books-service.tar.gz

      - name: Load Docker image
        run: gunzip -c books-service.tar.gz | docker load

      - name: Start services
        run: docker-compose up -d

      - name: Run query job
        run: |
          curl -X POST http://localhost:5001/books -H "Content-Type: application/json" -d '{"title":"Adventures of Huckleberry Finn","ISBN":"9780520343641","genre":"Fiction"}'
          curl -X POST http://localhost:5001/books -H "Content-Type: application/json" -d '{"title":"The Best of Isaac Asimov","ISBN":"9780385050784","genre":"Science Fiction"}'
          curl -X POST http://localhost:5001/books -H "Content-Type: application/json" -d '{"title":"Fear No Evil","ISBN":"9780394558783","genre":"Biography"}'
          curl -X POST http://localhost:5001/books -H "Content-Type: application/json" -d '{"title":"The Adventures of Tom Sawyer","ISBN":"9780195810400","genre":"Fiction"}'
          curl -X POST http://localhost:5001/books -H "Content-Type: application/json" -d '{"title":"I, Robot","ISBN":"9780553294385","genre":"Science Fiction"}'
          curl -X POST http://localhost:5001/books -H "Content-Type: application/json" -d '{"title":"Second Foundation","ISBN":"9780553293364","genre":"Science Fiction"}'
          queries=$(cat query.txt)
          for query in $queries; do
            response=$(curl -s -X GET "http://localhost:5001/books$query")
            echo "query: $query" >> response.txt
            echo "response: $response" >> response.txt

      - name: Upload query results
        uses: actions/upload-artifact@v4
        with:
          name: query-results
          path: response.txt